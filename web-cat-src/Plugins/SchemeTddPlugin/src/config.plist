{
    name             = SchemeTddPlugin;
    version.major    = 1;
    version.minor    = 2;
    version.revision = 0;
    version.date     = 20110226;
    requires         = ( PerlForPlugins );
    provider         = "Virginia Tech Computer Science";
    provider.url     = "http://web-cat.cs.vt.edu/updates";
    license          = "GNU Affero General Public License v.3";
    license.url      = "http://www.gnu.org/copyleft/agpl.html";
    copyright        = "(c) 2006-2008 Virginia Tech Department of Computer Science";
    info.url         = "http://web-cat.cs.vt.edu/WCWiki/SchemeTddPlugin";
    history.url      = "http://web-cat.cs.vt.edu/WCWiki/SchemeTddPlugin/ChangeHistory";
    executable = execute.pl;
    interpreter.prefix = "${PerlForPlugins.perl.exe}";
    author     = "Stephen Edwards (edwards@cs.vt.edu)";
    authorUid  = edwards;
    languages  = ( { name = "Scheme"; version = "DrScheme 4.x"; } );
    description = "This is a Scheme execution script.  It is designed
to execute the student program and a reference implementation against
a set of student tests.  It does not generate any feedback.";
    timeoutMultiplier = 2;
    timeoutInternalPadding = 400;
    assignmentOptions = (
        {
            property    = instructorReference;
            type        = file;
            fileTypes   = ( scm, scheme, ss );
            name        = "Instructor Reference Implementation";
            description =
  "A Scheme reference implementation (ASCII only, not DrScheme binary format)
  that serves as the instructor's model of correct behavior.";
        },
        {
            property    = predicateList;
            type        = shortText;
	    size        = 30;
            name        = "Allowed Predicate List";
            description =
  "A list of predicate names for the predicates listed in the assignment, and
  which student-written tests can be executed against in the reference
  implementation.  All of a student's tests are run against student-written
  code, but only tests of the predicates with names appearing here will
  be run against the reference implementation.  Separate predicates in the
  list with | (a vertical bar).  Perl-style regular expressions can be used.";
        }
    );
    options = (
        {
            property    = debug;
            type        = integer;
            advanced    = true;
            default     = 0;
            name        = "Debug Level";
            description =
  "Set to a non-zero value for the script to produce debugging output (the
  larger the number, the greater the detail, up to about 5).  Debugging output
  on each grading script run will be e-mailed to the instructor.";
        },
        {
	    disable     = true;
            property    = hintsLimit;
            type        = integer;
            default     = 3;
            name        = "Hints Limit";
            description = "Maximum number of hints the
                           student will receive from failed reference tests.";
        }
    );
}
