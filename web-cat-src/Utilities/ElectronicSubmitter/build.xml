<?xml version="1.0" encoding="UTF-8"?>
<!--========================================================================
    $Id: build.xml,v 1.5 2010/11/04 15:07:00 aallowat Exp $
============================================================================
    Copyright (C) 2006-2009 Virginia Tech

    This file is part of Web-CAT Electronic Submitter.

    Web-CAT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Web-CAT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with Web-CAT; if not, see <http://www.gnu.org/licenses/>.
============================================================================-->
<project basedir="." default="package" name="org.webcat.submitter">

    <!--
        Properties used throughout the build process.
    -->
    <property environment="env" />
    <property file="build.properties" />
    <property name="debuglevel" value="source,lines,vars" />
    <property name="target" value="1.5" />
    <property name="source" value="1.5" />

    <!--
        Use properties defined in build.properties to construct the release
        package filenames.
    -->
    <property name="release.jar" value="${release.name.prefix}-${release.version}.jar" />
    <property name="release.src.zip" value="${release.name.prefix}-${release.version}-src.zip" />
    <property name="release.bin.zip" value="${release.name.prefix}-${release.version}.zip" />


    <!--
        The classpath used to build the submitter JAR file.
    -->
    <path id="${project.name}.classpath">
        <pathelement location="bin" />
        <pathelement location="lib/**" />
    </path>


    <!--
        The classpath used to run the included JUnit tests.
    -->
    <path id="${project.name}.classpath.tests">
        <pathelement location="${env.JUNIT_HOME}/junit.jar" />
        <pathelement location="tests-bin" />
        <path refid="${project.name}.classpath" />
    </path>


    <!--
        Checks the preconditions necessary to run targets in this build file
        and sets properties to indicate whether or not they are met.
    -->
    <target name="-check-preconditions">
        <condition property="junit-home-set">
            <not><equals arg1="$${env.JUNIT_HOME}" arg2="${env.JUNIT_HOME}" /></not>
        </condition>
        <condition property="has-required-libs">
            <and>
                <available file="lib/activation.jar" />
                <available file="lib/mail.jar" />
            </and>
        </condition>
    </target>


    <!--
        Causes the build to fail if the JUNIT_HOME environment variable is not
        set when building the "test" target.
    -->
    <target name="-fail-if-junit-home-not-set" depends="-check-preconditions"
            unless="junit-home-set">
        <fail>
        JUNIT_HOME must be set in your environment to run the "test" target.
        </fail>
    </target>


    <!--
        Causes the build to fail if the user has not downloaded the required
        libraries and placed them in the "lib" directory..
    -->
    <target name="-fail-if-no-required-libs" depends="-check-preconditions"
            unless="has-required-libs">
        <fail>
        In order to build this library, you must download and place
        activation.jar and mail.jar in the project's "lib" folder. Please see
        lib/README.txt for more information.
        </fail>
    </target>


    <!--
        Initializes the build process by copying any required resources from
        the source directories into their corresponding locations in the "bin"
        folder.
    -->
    <target name="-init">
        <mkdir dir="bin" />
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java" />
        </copy>
    </target>


    <!--
        Initializes the build process for the unit tests by copying any
        required resources from the test source directories into their
        corresponding locations in the "tests-bin" folder.
    -->
    <target name="-init-tests">
        <mkdir dir="tests-bin" />
        <copy includeemptydirs="false" todir="tests-bin">
            <fileset dir="tests" excludes="**/*.launch, **/*.java" />
        </copy>
    </target>


    <!--
        Deletes any derived files generated by this build file.
    -->
    <target name="clean">
        <delete dir="bin" />
        <delete dir="tests-bin" />
        <delete dir="doc" />
        <delete file="${release.jar}" />
        <delete file="${release.src.zip}" />
        <delete file="${release.bin.zip}" />
    </target>


	<!--
	    Generates HTML readme and changelog files from the Markdown
	    formatted text files.
	-->
	<target name="markdown">
		<apply executable="perl"
			   output="README.html">
			<arg file="${markdown.path}"/>
			<fileset file="README.txt"/>
		</apply>
		<apply executable="perl"
			   output="CHANGELOG.html">
			<arg file="${markdown.path}"/>
			<fileset file="CHANGELOG.txt"/>
		</apply>
	</target>


    <!--
        Generates the Javadoc files for this library in the "doc" folder
        underneath the project.
    -->
    <target name="javadoc" depends="-fail-if-no-required-libs">
        <javadoc access="protected"
                 author="true"
                 destdir="doc"
                 doctitle="${project.title} API Specification"
                 nodeprecated="false"
                 nodeprecatedlist="false"
                 noindex="false"
                 nonavbar="false"
                 notree="false"
                 packagenames="${javadoc.packages}"
                 source="${source}"
                 sourcepath="src"
                 splitindex="true"
                 use="true"
                 version="true">
            <classpath refid="${project.name}.classpath" />
            <link href="http://java.sun.com/javase/6/docs/api/" />
        </javadoc>
    </target>


    <!--
        Compiles the Java source files for the source portion (not the unit
        tests) of the submitter.
    -->
    <target name="build" depends="-fail-if-no-required-libs, -init">
        <javac debug="true"
               debuglevel="${debuglevel}"
               destdir="bin"
               source="${source}"
               target="${target}">
            <src path="src" />
            <classpath refid="${project.name}.classpath" />
        </javac>
    </target>


    <!--
        Compiles the Java source files for the unit tests in the submitter.
    -->
    <target name="-build-tests" depends="build, -init-tests">
        <javac debug="true"
               debuglevel="${debuglevel}"
               destdir="tests-bin"
               source="${source}"
               target="${target}">
            <src path="tests" />
            <classpath refid="${project.name}.classpath.tests" />
        </javac>
    </target>


    <!--
        Runs the unit tests.
    -->
    <target name="test" depends="-fail-if-junit-home-not-set, -build-tests">
        <junit printsummary="on" haltonfailure="on">
            <classpath refid="${project.name}.classpath.tests" />
            <formatter type="plain" usefile="false" />
            <batchtest fork="true">
                <fileset dir="tests">
                    <include name="**/*Tests.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!--
        Packages the JAR file that can be used to deploy the submitter.
    -->
    <target name="package" depends="build">
        <jar destfile="${release.jar}">
            <manifest>
                <attribute name="Main-Class" value="${main.classname}" />
                <attribute name="Class-Path" value="." />
            </manifest>

            <fileset dir="bin" />
        </jar>
    </target>


    <!--
        Creates a ZIP file containing the source release of this library,
        suitable for posting on the web.
    -->
    <target name="release-src">
        <zip destfile="${release.src.zip}" basedir="." excludes="**">
            <zipfileset dir="src" prefix="src" />
            <zipfileset dir="tests" prefix="tests" />
            <zipfileset dir="lib" prefix="lib" excludes="**/*.jar" />
            <fileset file="build.xml" />
            <fileset file="CHANGELOG.txt" />
            <fileset file="COPYING" />
            <fileset file="README.txt" />
        </zip>
    </target>


    <!--
        Creates a ZIP file containing the binary release of this library,
        suitable for posting on the web.
    -->
    <target name="release-bin" depends="javadoc, build, package">
        <zip destfile="${release.bin.zip}" basedir="." excludes="**">
            <zipfileset dir="doc" prefix="apidocs" />
            <fileset file="CHANGELOG.txt" />
            <fileset file="COPYING" />
            <fileset file="README.txt" />
            <fileset file="${release.jar}" />
        </zip>
    </target>


    <!--
        Performs all the tasks in this build file: generates the Javadoc, runs
        the unit tests, builds the source, packages the JAR file for the
        library, and then generates a ZIP containing the source, binaries, and
        documentation for release on the web.
    -->
    <target name="all"
            depends="javadoc, test, package, release-src, release-bin"/>

</project>
