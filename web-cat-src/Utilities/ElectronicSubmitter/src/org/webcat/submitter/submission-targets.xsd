<?xml version="1.0" encoding="utf-8" ?>
<!--========================================================================
    $Id: submission-targets.xsd,v 1.1 2010/03/02 18:38:53 aallowat Exp $
============================================================================
    Copyright (C) 2006-2009 Virginia Tech

    This file is part of Web-CAT Electronic Submitter.

    Web-CAT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    Web-CAT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with Web-CAT; if not, see <http://www.gnu.org/licenses/>.
============================================================================-->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
    xmlns:st="http://web-cat.cs.vt.edu/submissionTargets"
    targetNamespace="http://web-cat.cs.vt.edu/submissionTargets"
    version="1.0">
<!--========================================================================
    <submission-targets>
    ===
    The root element.  For now, it is identical to an <assignment-group>, but
    the distinction is kept for future possible revisions, so that global
    information may be added to the root element, if desired.
-->
    <element name="submission-targets">
        <complexType>
            <group ref="st:assignmentContainer" />
        </complexType>
    </element>
<!--========================================================================
    <filter-ambiguity>
    ===
    Specifies which filter (include or exclude) should be preferred if a
    file in the project being packaged satisfies both an inclusion and an
    exclusion filter at the same level of the tree, or if there is no match
    for a file when the root of the tree is reached. If this tag is omitted,
    the default behavior depends on whether the ambiguity is at the root or
    not:

    * If a file matches both an <include> and an <exclude> tag at a non-root
      node, exclusion takes preference over inclusion in the absence of the
      <filter-ambiguity> tag. If a file matches neither an <include> nor an
      <exclude> tag at a non-root node, then control passes to the parent
      node to determine the inclusion/exclusion of the file.

    * If a file matches both an <include> and an <exclude> tag at the root
      node, exclusion takes preference over inclusion in the absence of the
      <filter-ambiguity> tag. If a file matches neither an <include> nor an
      <exclude> tag at the root node, then the file is included, UNLESS there
      are ANY <include> tags at the root; in this case, the file is excluded.

      This means that essentially, by default everything is included at the
      root, unless the user specifies explicit inclusions, in which case
      everything but those patterns is excluded. These root settings can be
      overridden by specifying inclusions and exclusions at lower levels in
      the tree.
-->
    <element name="filter-ambiguity">
        <complexType>
            <attributeGroup ref="st:filterAmbiguityElement" />
        </complexType>
    </element>
<!--========================================================================
    <include>, <exclude>, <required>
    ===
    Specify file patterns for particular types of files.  They all share a
    common attribute group - a single required "pattern" attribute, of type
    "string".
-->
    <element name="include">
        <complexType>
            <attributeGroup ref="st:fileElement" />
        </complexType>
    </element>
    <element name="exclude">
        <complexType>
            <attributeGroup ref="st:fileElement" />
        </complexType>
    </element>
    <element name="required">
        <complexType>
            <attributeGroup ref="st:fileElement" />
        </complexType>
    </element>
<!--========================================================================
    <packager>
    ===
    Contains a required attribute "id" which identifies the packager to use
    (should be registered as an extension in Eclipse), and also contains an
    optional sequence of <param> elements that are used to pass information
    to the packager.
-->
    <element name="packager">
        <complexType>
            <sequence>
                <element ref="st:param" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
            <attribute name="id" type="string" use="required" />
        </complexType>
    </element>
<!--========================================================================
    <transport>
    ===
    Contains a required "uri" attribute which identifies the transport
    mechanism for the submission, as well as an optional sequence of
    <param> and <file-param> elements that are used to pass information to
    the transport mechanism.
-->
    <element name="transport">
        <complexType>
            <sequence>
                <choice minOccurs="0" maxOccurs="unbounded">
                    <element ref="st:param" />
                    <element ref="st:file-param" />
                </choice>
            </sequence>
            <attribute name="uri" type="anyURI" />
        </complexType>
    </element>
    <element name="param">
        <complexType>
            <attributeGroup ref="st:paramElement"/>
        </complexType>
    </element>
    <element name="file-param">
        <complexType>
            <attributeGroup ref="st:paramElement"/>
        </complexType>
    </element>
    <attributeGroup name="paramElement">
        <attribute name="name" type="string" use="required"/>
        <attribute name="value" type="string" use="required"/>
    </attributeGroup>
<!--========================================================================
    <assignment-group>
    ===
    An <assignment-group> can contain other assignment groups and assignments.
    The user-interface should display these as a "folder" or other container
    in a hierarchical structure.

    An assignment group has an optional name, a "hidden" attribute for
    user-interface purposes, and it can contain <include>, <exclude>,
    <required>, <packager>, and <transport> elements that override or
    supplement the settings in the parent node.
-->
    <element name="assignment-group">
        <complexType>
            <group ref="st:assignmentContainer" />
            <attribute name="name" use="optional"/>
            <attribute name="hidden" use="optional" default="false"/>
        </complexType>
    </element>
<!--========================================================================
    <import-group>
    ===
    An <import-group> is an assignment group that is contained in another
    XML file.  This other file is a full-fledged submission targets file
    with its own <submission-targets> root element - the definitions in
    that file are folded into a new group at the position of this
    element.

    Imported groups are delay-loaded - that is, the submitter will not load
    the definitions at the specified URL until information about this group
    is queried, if at all.

    An imported group has a required name, a "hidden" attribute for
    user-interface purposes, and a "ref" attribute that contains the URL
    from with the definitions will be loaded.  An imported group element
    has no children of its own.
-->
    <element name="import-group">
        <complexType>
            <attribute name="name" use="required"/>
            <attribute name="hidden" use="optional" default="false"/>
            <attribute name="href" use="required" type="anyURI"/>
        </complexType>
    </element>
<!--========================================================================
    <assignment>
    ===
    Refers to a single assignment.  This element is similar to an assignment
    group, but it cannot contain other assignment groups or assignments.
    Additionally, the "name" attribute in an assignment is required.
-->
    <element name="assignment">
        <complexType>
            <sequence>
                <element ref="st:filter-ambiguity" minOccurs="0" maxOccurs="1" />
                <choice minOccurs="0" maxOccurs="unbounded">
                    <element ref="st:include" minOccurs="0" />
                    <element ref="st:exclude" minOccurs="0" />
                    <element ref="st:required" minOccurs="0" />
                </choice>
                <element ref="st:packager" minOccurs="0" maxOccurs="1" />
                <element ref="st:transport" minOccurs="0" maxOccurs="1" />
            </sequence>
            <attribute name="name" use="required"/>
            <attribute name="hidden" use="optional" default="false"/>
        </complexType>
    </element>
<!--========================================================================
    Attribute group: filterAmbiguityElement
    Used by: <filter-ambiguity>
    ===
    Contains a single required "choice" attribute that is one of the following
    two values: "include" or "exclude".
-->
    <attributeGroup name="filterAmbiguityElement">
        <attribute name="choice" type="st:filterAmbiguityChoice" use="required" />
    </attributeGroup>
    <simpleType name="filterAmbiguityChoice">
        <restriction base="string">
            <enumeration value="include" />
            <enumeration value="exclude" />
        </restriction>
    </simpleType>
<!--========================================================================
    Attribute group: fileElement
    Used by: <include>, <exclude>, <required>
    ===
    Contains a single required "pattern" attribute that specifies the
    DOS- or Unix-style file pattern used to match a file or files in the
    submission.
-->
    <attributeGroup name="fileElement">
        <attribute name="pattern" type="string" use="required" />
    </attributeGroup>
<!--========================================================================
    Group: assignmentContainer
    Used by: <submission-targets>, <assignment-group>
    ===
    Contains all the elements used to define an assignment group.
-->
    <group name="assignmentContainer">
        <sequence>
            <element ref="st:filter-ambiguity" minOccurs="0" maxOccurs="1" />
            <choice minOccurs="0" maxOccurs="unbounded">
                <element ref="st:include" minOccurs="0" />
                <element ref="st:exclude" minOccurs="0" />
                <element ref="st:required" minOccurs="0" />
            </choice>
            <element ref="st:packager" minOccurs="0" maxOccurs="1" />
            <element ref="st:transport" minOccurs="0" maxOccurs="1" />
            <choice minOccurs="0" maxOccurs="unbounded">
                <element ref="st:assignment"/>
                <element ref="st:assignment-group"/>
                <element ref="st:import-group"/>
            </choice>
        </sequence>
    </group>
</schema>
