{
    rules = (
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = backgroundColorForTable;
                value = "transparent";
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = editTime;
                value = 1;
            };
        },
        {
            author = 60;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOOrQualifier;
                qualifiers = (
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = list;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = queryAll;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = select;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = edit;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = inspect;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = query;
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = backgroundColorForTable;
                value = "#ffffdd";
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOOrQualifier;
                qualifiers = (
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = list;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = queryAll;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = select;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = edit;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = inspect;
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo";
                        value = query;
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.BooleanAssignment;
                keyPath = alternateRowColor;
                value = true;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {class = com.webobjects.directtoweb.Assignment; keyPath = border; value = 0; };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOKeyValueQualifier;
                key = session.user.accessLevel;
                selectorName = "isLessThan";
                value = {class = java.lang.Number; value = 100; };
            };
            rhs = {
                class = org.webcat.admin.WCD2WNoPWAssignment;
                keyPath = displayPropertyKeys;
                value = defaultPropertyKeysFromEntity;
            };
        },
        {
            author = 60;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = org.webcat.admin.WCD2WAssignment;
                keyPath = displayPropertyKeys;
                value = defaultPropertyKeysFromEntity;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = editIcon;
                value = EditMetalSmBtn.gif;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = inspectIcon;
                value = InspectMetalSmBtn.gif;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOKeyValueQualifier;
                key = task;
                selectorName = "isEqualTo";
                value = error;
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = pageName;
                value = org.webcat.admin.WCErrorPageTemplate;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = pageWrapperName;
                value = org.webcat.admin.WCPageWrapper;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOAndQualifier;
                qualifiers = (
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = session.user.accessLevel;
                        selectorName = "isLessThan";
                        value = {class = java.lang.Number; value = 90; };
                    },
                    {
                        class = com.webobjects.eocontrol.EOKeyValueQualifier;
                        key = session.suppressAccessControl;
                        selectorName = "isEqualTo";
                        value = {class = java.lang.Number; value = 0; };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.BooleanAssignment;
                keyPath = readOnly;
                value = true;
            };
        },
        {
            author = 60;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = selectButtonFileName;
                value = SelectMetalSmBtn.gif;
            };
        },
        {
            author = 50;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = selectButtonFileName;
                value = SelectMetalSmBtn.gif;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForConfirmPage;
                value = org.webcat.admin.WCConfirmPageTemplate;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForEditPage;
                value = org.webcat.admin.WCInspectPageTemplate;
            };
        },
    	{
    		author = 10;
    		class = com.webobjects.directtoweb.Rule;
    		rhs = {
    			class = com.webobjects.directtoweb.Assignment;
    			keyPath = templateNameForWizardCreationPage;
                value = org.webcat.admin.WCInspectPageTemplate;
    		};
    	},
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForEditRelationshipPage;
                value = org.webcat.admin.WCEditRelationshipPageTemplate;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForErrorPage;
                value = org.webcat.admin.WCErrorPageTemplate;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForInspectPage;
                value = org.webcat.admin.WCInspectPageTemplate;
            };
        },
        {
            author = 10;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForListPage;
                value = org.webcat.admin.WCListPageTemplate;
            };
        },
        {
            author = 100;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForQueryPage;
                value = org.webcat.admin.WCQueryPageTemplate;
            };
        },
        {
            author = 100;
            class = com.webobjects.directtoweb.Rule;
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = templateNameForQueryAllEntitiesPage;
                value = org.webcat.admin.WCQueryAllEntitiesPageTemplate;
            };
        },
        {
            author = 100;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOKeyValueQualifier;
                key = task;
                selectorName = "isEqualTo";
                value = queryAll;
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = pageAvailable;
                value = org.webcat.admin.WCQueryAllEntitiesPageTemplate;
            };
        },
        {
            author = 100;
            class = com.webobjects.directtoweb.Rule;
            lhs = {
                class = com.webobjects.eocontrol.EOKeyValueQualifier;
                key = task;
                selectorName = "isEqualTo";
                value = queryAll;
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = pageName;
                value = org.webcat.admin.WCQueryAllEntitiesPageTemplate;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 50;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = edit;
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship.isToMany;
                        selectorName = "isEqualTo:";
                        value = { class = NSNumber; value = 1; };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WEditToManyFault;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 45;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = query;
                    },
                  {
                      class = EOKeyValueQualifier;
                      key = smartRelationship.destinationEntity.sharedObjectFetchSpecificationNames.count;
                      selectorName = "isGreaterThan:";
                      value = { class = NSNumber; value = 0; };
                  },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = ERD2WQueryToOneRelationship;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 50;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = query;
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship;
                        selectorName = "isNotEqualTo:";
                        value = { class = EONull; };
                    },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    },
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "authenticationDomain";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "institution";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "course";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "department";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "semester";
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = ERD2WQueryToOneRelationship;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 45;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = edit;
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship;
                        selectorName = "isNotEqualTo:";
                        value = { class = EONull; };
                    },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WEditToOneFault;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 50;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = edit;
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship;
                        selectorName = "isNotEqualTo:";
                        value = { class = EONull; };
                    },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    },
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "authenticationDomain";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "institution";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "course";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "department";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "semester";
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = ERD2WEditToOneRelationship;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 45;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = list;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = select;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = inspect;
                            }
                        );
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship;
                        selectorName = "isNotEqualTo:";
                        value = { class = EONull; };
                    },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = ERD2WDisplayToOne;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 50;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = list;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = select;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = inspect;
                            }
                        );
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship.isToMany;
                        selectorName = "isEqualTo:";
                        value = { class = NSNumber; value = 1; };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WDisplayToManyFault;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 65;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = list;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = select;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = inspect;
                            }
                        );
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship.isToMany;
                        selectorName = "isEqualTo:";
                        value = { class = NSNumber; value = 1; };
                    },
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "graderFor";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "graders";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "enrolledIn";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "teaching";
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = propertyKey;
                                selectorName = "isEqualTo:";
                                value = "instructors";
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = ERD2WDisplayToManyList;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 65;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = edit;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = task;
                                selectorName = "isEqualTo:";
                                value = query;
                            }
                        );
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartRelationship;
                        selectorName = "isNotEqualTo:";
                        value = { class = EONull; };
                    },
                    {
                        class = EONotQualifier;
                        qualifier = {
                            class = EOKeyValueQualifier;
                            key = smartRelationship.isToMany;
                            selectorName = "isEqualTo:";
                            value = { class = NSNumber; value = 1; };
                        };
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = toOneUIStyle;
                value = popup;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 25;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = edit;
                    },
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = smartAttribute.className;
                                selectorName = "isEqualTo:";
                                value = java.lang.Boolean;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = smartAttribute.userInfo.type;
                                selectorName = "isEqualTo:";
                                value = boolean;
                            },
                            {
                                class = EOAndQualifier;
                                qualifiers = (
                                    {
                                        class = EOKeyValueQualifier;
                                        key = smartAttribute.userInfo.erPrototype;
                                        selectorName = "isEqualTo:";
                                        value = Boolean;
                                    },
                                    {
                                        class = EOOrQualifier;
                                        qualifiers = (
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.className;
                                                selectorName = "isEqualTo:";
                                                value = java.math.BigDecimal;
                                            },
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.className;
                                                selectorName = "isEqualTo:";
                                                value = java.lang.Number;
                                            }
                                        );
                                    }
                                );
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WEditBoolean;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 22;
            lhs = {
                class = EOOrQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = smartAttribute.className;
                        selectorName = "isEqualTo:";
                        value = java.lang.Boolean;
                    },
                    {
                        class = EOKeyValueQualifier;
                        key = smartAttribute.userInfo.type;
                        selectorName = "isEqualTo:";
                        value = boolean;
                    },
                    {
                        class = EOAndQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = smartAttribute.userInfo.erPrototype;
                                selectorName = "isEqualTo:";
                                value = Boolean;
                            },
                            {
                                class = EOOrQualifier;
                                qualifiers = (
                                    {
                                        class = EOKeyValueQualifier;
                                        key = smartAttribute.className;
                                        selectorName = "isEqualTo:";
                                        value = java.math.BigDecimal;
                                    },
                                    {
                                        class = EOKeyValueQualifier;
                                        key = smartAttribute.className;
                                        selectorName = "isEqualTo:";
                                        value = java.lang.Number;
                                    }
                                );
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WDisplayBoolean;
            };
        },
        {
            class = com.webobjects.directtoweb.Rule;
            author = 25;
            lhs = {
                class = EOAndQualifier;
                qualifiers = (
                    {
                        class = EOKeyValueQualifier;
                        key = task;
                        selectorName = "isEqualTo:";
                        value = query;
                    },
                    {
                        class = EOOrQualifier;
                        qualifiers = (
                            {
                                class = EOKeyValueQualifier;
                                key = smartAttribute.className;
                                selectorName = "isEqualTo:";
                                value = java.lang.Boolean;
                            },
                            {
                                class = EOKeyValueQualifier;
                                key = smartAttribute.userInfo.type;
                                selectorName = "isEqualTo:";
                                value = boolean;
                            },
                            {
                                class = EOAndQualifier;
                                qualifiers = (
                                    {
                                        class = EOOrQualifier;
                                        qualifiers = (
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.userInfo.erPrototype;
                                                selectorName = "isEqualTo:";
                                                value = Boolean;
                                            },
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.userInfo.erPrototype;
                                                selectorName = "isEqualTo:";
                                                value = BooleanYesNo;
                                            }
                                        );
                                    },
                                    {
                                        class = EOOrQualifier;
                                        qualifiers = (
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.className;
                                                selectorName = "isEqualTo:";
                                                value = java.math.BigDecimal;
                                            },
                                            {
                                                class = EOKeyValueQualifier;
                                                key = smartAttribute.className;
                                                selectorName = "isEqualTo:";
                                                value = java.lang.Number;
                                            }
                                        );
                                    }
                                );
                            }
                        );
                    }
                );
            };
            rhs = {
                class = com.webobjects.directtoweb.Assignment;
                keyPath = componentName;
                value = D2WQueryBoolean;
            };
        },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = ({"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "inspect"; }); }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.className"; "selectorName" = "isEqualTo:"; "value" = "com.webobjects.foundation.NSTimestamp"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "org.webcat.admin.d2w.DisplayDate"; }; },
        {"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "edit"; }, {"class" = "EOKeyValueQualifier"; "key" = "session.javaScriptEnabled"; "selectorName" = "isEqualTo:"; "value" = {"class" = "NSNumber"; "value" = "1"; }; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.className"; "selectorName" = "isEqualTo:"; "value" = "com.webobjects.foundation.NSTimestamp"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "org.webcat.admin.d2w.EditDate"; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    	    {"class" = "EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo:"; "value" = "LoggedError"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }); },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = propertyKey; "selectorName" = "isEqualTo:"; "value" = "component"; }, {"class" = "EOKeyValueQualifier"; "key" = propertyKey; "selectorName" = "isEqualTo:"; "value" = "exceptionName"; }, {"class" = "EOKeyValueQualifier"; "key" = propertyKey; "selectorName" = "isEqualTo:"; "value" = "inClass"; }, {"class" = "EOKeyValueQualifier"; "key" = propertyKey; "selectorName" = "isEqualTo:"; "value" = "page"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "org.webcat.admin.d2w.DisplayClassNameWithoutPackage"; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    	    {"class" = "EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo:"; "value" = "LoggedError"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "defaultSortOrdering"; "value" = ( { "class" = "EOSortOrdering"; "key" = "occurrences"; "selectorName" = "compareDescending:"; } ); }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    	    {"class" = "EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo:"; "value" = "User"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "defaultSortOrdering"; "value" = ( { "class" = "EOSortOrdering"; "key" = "lastName"; "selectorName" = "compareAscending:"; }, { "class" = "EOSortOrdering"; "key" = "firstName"; "selectorName" = "compareAscending:"; }, { "class" = "EOSortOrdering"; "key" = "userName"; "selectorName" = "compareAscending:"; } ); }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }); },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "mediumText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "largeText"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "org.webcat.admin.d2w.DisplayLineCount"; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "list"; }, {"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "select"; }); },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "tinyText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "mediumText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "largeText"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "justification"; "value" = "left"; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "edit"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "mediumText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "largeText"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "er.directtoweb.components.strings.ERD2WEditLargeString"; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "edit"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "mediumText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "largeText"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "rows"; "value" = 20; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "edit"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "mediumText"; }, {"class" = "EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo:"; "value" = "largeText"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "length"; "value" = 80; }; },
    	{"class" = "com.webobjects.directtoweb.Rule"; "author" = "45"; "lhs" = {"class" = "EOAndQualifier"; "qualifiers" = (
    		{"class" = "EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo:"; "value" = "edit"; },
    		{"class" = "EOOrQualifier"; "qualifiers" = ({"class" = "EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo:"; "value" = "timeZoneName"; }, {"class" = "EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo:"; "value" = "timeZone"; }); }
    	); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "org.webcat.admin.d2w.EditTimeZoneName"; }; }
    );
}
