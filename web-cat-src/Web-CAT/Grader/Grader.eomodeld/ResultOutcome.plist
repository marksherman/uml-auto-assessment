{
    attributes = (
        {
            columnName = CCONTENTS;
            name = contents;
            prototypeName = mutableDictionary;
            userInfo = {
                adaptorValueConversionMethodName = archiveData;
                isMutable = true;
                valueClassName = "org.webcat.core.MutableDictionary";
                valueFactoryMethodName = objectWithArchiveData;
            };
        },
        {name = id; prototypeName = id; },
        {columnName = CINDEX; name = index; prototypeName = integer; },
        {columnName = CRESULTID; name = resultId; prototypeName = foreignId; },
        {columnName = CSUBMISSIONID; name = submissionId; prototypeName = foreignId; },
        {columnName = CTAG; name = tag; prototypeName = tinyText; },
        {
            name = updateMutableFields;
            prototypeName = updateMutableFields;
            userInfo = {isScalar = true; scalarDefault = false; type = boolean; };
        }
    );
    attributesUsedForLocking = (index, resultId, submissionId, tag, updateMutableFields);
    className = "org.webcat.grader.ResultOutcome";
    classProperties = (contents, index, submission, submissionResult, tag, updateMutableFields);
    externalName = TRESULTOUTCOME;
    fetchSpecificationDictionary = {};
    name = ResultOutcome;
    primaryKeyAttributes = (id);
    relationships = (
        {
            destination = Submission;
            isToMany = N;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = id; sourceAttribute = submissionId; });
            name = submission;
        },
        {
            destination = SubmissionResult;
            joinSemantic = EOInnerJoin;
            joins = ({destinationAttribute = id; sourceAttribute = resultId; });
            name = submissionResult;
        }
    );
}
